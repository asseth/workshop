console.log("Preloading...");

// We want 3 accounts for our tests
while (eth.accounts.length < 3) {
	console.log("Creating test account");
	personal.newAccount(""); // Empty passphrase
}

miner.setEtherbase(eth.accounts[0]);
console.log("Starting miner...");
miner.start(3);

// Security best practices ftw
for (i = 0; i < eth.accounts.length; i++) {
    personal.unlockAccount(eth.accounts[i], "", 3600);
}

// Account aliases
var alice = eth.accounts[0];
var gerard = eth.accounts[1];
var monique = eth.accounts[2];

console.log("Provisioning accounts with some eth...");

// Make sure Alice can send at least 1 eth to every accounts
while(web3.fromWei(eth.getBalance(alice), "ether") <= eth.accounts.length) {
	// After one block, alice (the only miner) will get the block reward of 5 eth
	admin.sleepBlocks(1);	
}

// Alice sends 1 eth to every poor accounts
for (i = 0; i < eth.accounts.length; i++) {
	var acc = eth.accounts[i];
	if (web3.fromWei(eth.getBalance(acc), "ether") < 0.1) {
		eth.sendTransaction({from:alice, to:acc, value: web3.toWei(1, "ether")})
	}
}

// Generated by compile.py
loadScript('EthLove.js');
var ethlove = deployEthLove();
admin.sleepBlocks(1);

function runEthLove() {
	console.log("Linking Gerard & Monique...")
	ethlove.link.sendTransaction("Monique", gerard, {from: monique});
	ethlove.link.sendTransaction("Gerard", monique, {from: gerard});
	admin.sleepBlocks(3);
}